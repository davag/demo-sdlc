# Task ID: 6
# Title: Create Main Page Layout and Routing
# Status: pending
# Dependencies: 4, 5
# Priority: medium
# Description: Implement the main page layout and set up React Router for navigation.
# Details:
1. Create the main page component at `/src/pages/TasksPage.tsx`:
```typescript
import React, { useState } from 'react';
import FilterBar from '../components/FilterBar';
import TaskList from '../components/TaskList';
import TaskForm from '../components/TaskForm';

const TasksPage: React.FC = () => {
  const [isAddingTask, setIsAddingTask] = useState(false);
  
  const handleAddComplete = () => {
    setIsAddingTask(false);
  };
  
  return (
    <div className="container mx-auto px-4 py-6">
      <div className="flex justify-between items-center mb-6">
        <h2 className="text-2xl font-bold">My Tasks</h2>
        <button
          onClick={() => setIsAddingTask(!isAddingTask)}
          className="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"
        >
          {isAddingTask ? 'Cancel' : 'Add Task'}
        </button>
      </div>
      
      {isAddingTask && (
        <div className="mb-6">
          <TaskForm onComplete={handleAddComplete} />
        </div>
      )}
      
      <FilterBar />
      <TaskList />
    </div>
  );
};

export default TasksPage;
```

2. Create the App component with routing at `/src/App.tsx`:
```typescript
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import Header from './components/Header';
import TasksPage from './pages/TasksPage';

const App: React.FC = () => {
  return (
    <Router>
      <div className="flex flex-col min-h-screen">
        <Header />
        <main className="flex-grow">
          <Routes>
            <Route path="/" element={<TasksPage />} />
            {/* Add more routes here as needed */}
          </Routes>
        </main>
        <footer className="py-4 text-center text-sm text-gray-500 dark:text-gray-400 border-t dark:border-gray-700">
          <div className="container mx-auto px-4">
            Task Management App &copy; {new Date().getFullYear()}
          </div>
        </footer>
      </div>
    </Router>
  );
};

export default App;
```

3. Update the main entry file at `/src/main.tsx`:
```typescript
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import './index.css';

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);
```

# Test Strategy:
Create integration tests using Vitest and React Testing Library to verify that the TasksPage component renders correctly with all its child components. Test the routing functionality by checking that the correct components are rendered for each route. Verify that the Add Task button correctly toggles the TaskForm visibility. Test the overall layout and responsiveness by checking that the components are properly arranged and styled.
